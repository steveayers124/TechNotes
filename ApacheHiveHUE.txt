ApacheHiveHUE.txt
HiveQL language
for querying HADOOP




URL parts
---------
scheme, host, path, query string


Data Manipulation in HiveQL
---------------------------
String functions, Math functions, Date functions, Conditionals
String functions
concat()   #create a new key value by combining strings
lower()
substr()
trim()
regexp_replace()
SELECT lower(regexp_replace(name, '[^a-zA-Z0-9]+', '')) AS CustKey

Math functions
round()
rand()    # mask data for security, or generate test data
sqrt(), abs(), and all the rest...
: don't use in HIVE. Instead, pull the data you want from HIVE, then use
your analytics platform, Tableau or R or RAWGraphs or Apache Superset

Date functions
to_date()                   # to work with a text field using date functions
year(), month(), day()      # pull out parts of the date value
datediff()                  # returns the days between two dates
date_add(), date_sub()

Conditionals
if()
coalesce()   # return first non-null value in a list of values; order by which you'd rather have
# e.g. with an employee dataset, coalesce(hiredate, termdate, today): 1st non-null
case ... when


# Cumulative joins in a query require caution that you don't invalidate results
SELECT a.val, b.val, c.val
FROM a
JOIN b ON (a.key = b.key)
LEFT OUTER JOIN c ON (a.key = c.key)
# So the first in an inner join, and then we join additional info from c to those results.


LEFT SEMI JOIN is like ANSI SQL clause EXISTS
--------------
# ANSI SQL
SELECT *
FROM a
WHERE EXISTS (
  SELECT *
  FROM b
  WHERE a.name = b.name
)
# HIVE
SELECT *
FROM a
LEFT SEMI JOIN b ON a.name = b.name


Nice synopsis of Inner, Left, and Full Outer joins
https://www.lynda.com/Hive-tutorials/Combining-tables-JOIN/534413/573311-4.html?org=library.rogersar.gov

Inner Join
----------
Joined sales table with products table, displaying sales for products, products for sales, provided both exist.

Left Join
----------
Joined sales table with products table, displaying all sales and their products, even if no product is listed for a sale.

Full Outer Join
---------------
Joined sales table with products table, displaying all sales and their products, plus even products that had no sales, along with sales having no products.


create table clients (
  Name string,
  Symbol string,
  LastSale double,
  MarketCapLabel string,
  MarketCapAmount bigint,
  IPOyear int,
  Sector string,
  Industry string,
  SummaryQuote string
)
row format serde 'com.bizo.hive.serde.csv.CSVSerde'
stored as textfile;

ANSI SQL
--------
standard statement structure
----------------------------
/* structure of select
SELECT <columns>
FROM <table>
JOIN <other tables>
WHERE <filter conditions>
GROUP BY <grouping>
HAVING <aggregate filter>
ORDER BY <column list in order>
LIMIT <number of rows>;
*/

Alternatives to Tableau
-----------------------
RAWGraphs
JetPack Data
Metabase
Apache Superset
Power BI for Office 365, if you already have Office365
QlikView
Plotly
Pentaho
Bokeh is a python interactive visualization library that targets modern web browsers for presentation.
Google Data Studio - Data visualization and business intelligence (BI) platform for aggregating, sharing, collaborating, and pulling insights from raw databases...
Free Tableau Alternatives - AlternativeTo.net
https://alternativeto.net/software/tableau/?license=free
